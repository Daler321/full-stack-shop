{"version":3,"file":"static/js/327.9e883639.chunk.js","mappings":"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","sources":["components/features/checkout-item/checkout-item.style.tsx","components/features/checkout-item/checkout-item.component.tsx","components/elements/payment-form/payment-form.style.tsx","components/elements/payment-form/payment-form.component.tsx","components/elements/log-in-button/log-in-button.component.tsx","routes/checkout-page/checkout-page.style.tsx","routes/checkout-page/checkout-page.component.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid darkgrey;\r\n  padding: 15px 0;\r\n  font-size: 20px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 23%;\r\n  padding-right: 15px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const Info = styled.span`\r\n  width: 23%;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 23%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const OldPrice = styled.span`\r\n  font-size: 15px;\r\n  text-decoration: line-through;\r\n`;\r\n\r\nexport const NewPrice = styled.span`\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Quantity = styled.span`\r\n  width: 23%;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Arrow = styled.div`\r\n  cursor: pointer;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const Value = styled.div`\r\n  margin: 0 10px;\r\n`;\r\n\r\nexport const RemoveBtn = styled.div`\r\n  cursor: pointer;\r\n  padding-left: 12px;\r\n`;\r\n","import React, { FC, memo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { ICartItem } from '../../../types/products.api.interface';\r\nimport {\r\n  discoundPrice,\r\n  fixRounding,\r\n} from '../../../utils/helper-functions/helper-functions';\r\nimport {\r\n  addItemToCart,\r\n  reduceItemInCart,\r\n  removeItemFromCart,\r\n} from '../../../store/cart/cart.slice';\r\n\r\nimport {\r\n  CheckoutItemContainer,\r\n  ImageContainer,\r\n  Info,\r\n  Quantity,\r\n  Arrow,\r\n  Value,\r\n  RemoveBtn,\r\n  PriceContainer,\r\n  OldPrice,\r\n  NewPrice,\r\n} from './checkout-item.style';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport type CheckoutItemProps = {\r\n  item: ICartItem;\r\n};\r\n\r\nconst CheckoutItem: FC<CheckoutItemProps> = memo(({ item }) => {\r\n  const { images, title, quantity, price, discountpercentage, stock } = item;\r\n  const dispatch = useDispatch();\r\n\r\n  const addProduct = () => {\r\n    if (quantity >= stock) return;\r\n    dispatch(addItemToCart(item));\r\n  };\r\n  const reduceProduct = () => dispatch(reduceItemInCart(item));\r\n  const removeProduct = () => dispatch(removeItemFromCart(item));\r\n\r\n  return (\r\n    <CheckoutItemContainer>\r\n      <ImageContainer>\r\n        <Link to={`/product/${item.id}`}>\r\n          <img src={images[0]} alt={title} />\r\n        </Link>\r\n      </ImageContainer>\r\n      <Info>{title}</Info>\r\n      <Quantity>\r\n        <Arrow onClick={reduceProduct}>&#10094;</Arrow>\r\n        <Value>{quantity}</Value>\r\n        <Arrow onClick={addProduct}>&#10095;</Arrow>\r\n      </Quantity>\r\n      <PriceContainer>\r\n        {(discountpercentage && (\r\n          <>\r\n            <OldPrice>${price * quantity}</OldPrice>\r\n            <NewPrice>\r\n              $\r\n              {fixRounding(\r\n                Number(discoundPrice(price, discountpercentage)) * quantity,\r\n                2\r\n              )}\r\n            </NewPrice>\r\n          </>\r\n        )) || <NewPrice>${price * quantity}</NewPrice>}\r\n      </PriceContainer>\r\n      <RemoveBtn onClick={removeProduct}>&#10005;</RemoveBtn>\r\n    </CheckoutItemContainer>\r\n  );\r\n});\r\n\r\nexport default CheckoutItem;\r\n","import styled from 'styled-components';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const PaymentFormContainer = styled.div`\r\n  height: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const FormContainer = styled.form`\r\n  height: 100px;\r\n  min-width: 500px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-width: 90%;\r\n  }\r\n`;\r\n\r\nexport const PaymentButton = styled(CustomButton)`\r\n  margin-left: auto;\r\n  margin-top: 30px;\r\n`;\r\n","import React, { FormEvent, useState, useEffect, FC } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { selectCartTotal } from '../../../store/cart/cart.selector';\r\nimport { IOrder } from '../../../types/order.interfac';\r\n\r\nimport { BUTTON_TYPE_CLASSES } from '../custom-button/custom-button.component';\r\n\r\nimport {\r\n  PaymentFormContainer,\r\n  FormContainer,\r\n  PaymentButton,\r\n} from './payment-form.style';\r\nimport { selectTokenAndId } from '../../../store/authorization/authorization.selector';\r\nimport { AppDispatch } from '../../../store/store';\r\nimport { addOrder } from '../../../store/order/order.thunk';\r\nimport { selectOrderErrorAndLoading } from '../../../store/order/order.selector';\r\n\r\ninterface IPaymentFormProps {\r\n  productsToOrder: IOrder[];\r\n}\r\n\r\nconst PaymentForm: FC<IPaymentFormProps> = ({ productsToOrder }) => {\r\n  const { id, token } = useSelector(selectTokenAndId);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const orderHandler = () => {\r\n    if (!id || !token) return;\r\n\r\n    dispatch(addOrder({ token, order: productsToOrder }));\r\n  };\r\n\r\n  //\r\n\r\n  // const stripe = useStripe();\r\n  // const elements = useElements();\r\n  const amount = useSelector(selectCartTotal);\r\n  // const currentUser = useSelector(selectCurrentUser);\r\n  const [isProccesingPayment, setIsProccesingPayment] = useState(false);\r\n\r\n  const paymentHandler = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    // if (!stripe || !elements) return;\r\n\r\n    setIsProccesingPayment(true);\r\n    orderHandler();\r\n\r\n    setInterval(() => setIsProccesingPayment(false), 5000);\r\n\r\n    // const response = await fetch('/.netlify/functions/create-payment-intent', {\r\n    //   method: 'post',\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //   },\r\n    //   body: JSON.stringify({ amount: amount * 100 }),\r\n    // }).then((res) => res.json());\r\n\r\n    // const {\r\n    //   paymentIntent: { client_secret },\r\n    // } = response;\r\n\r\n    // const cardDetails = elements.getElement(CardElement);\r\n\r\n    // if (cardDetails === null) return;\r\n\r\n    // const paymentResult = await stripe.confirmCardPayment(client_secret, {\r\n    //   payment_method: {\r\n    //     card: cardDetails,\r\n    //     billing_details: {\r\n    //       name: currentUser ? currentUser.displayName : 'Guest',\r\n    //     },\r\n    //   },\r\n    // });\r\n\r\n    // setIsProccesingPayment(false);\r\n\r\n    // if (paymentResult.error) {\r\n    //   alert(paymentResult.error);\r\n    // } else {\r\n    //   if (paymentResult.paymentIntent.status === 'succeeded') {\r\n    //     alert('Payment Successful');\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <PaymentFormContainer>\r\n      <FormContainer onSubmit={paymentHandler}>\r\n        <h2>Credit Card Payment: </h2>\r\n        {/* <CardElement /> */}\r\n        <PaymentButton\r\n          isLoading={isProccesingPayment}\r\n          buttonType={BUTTON_TYPE_CLASSES.inverted}\r\n        >\r\n          Pay now\r\n        </PaymentButton>\r\n      </FormContainer>\r\n    </PaymentFormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport CustomButton from '../custom-button/custom-button.component';\n\nconst LogInButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 20px;\n  width: 80%;\n  padding: 40px;\n\n  h2 {\n    font-size: 26px;\n  }\n\n  button {\n    width: 50%;\n    transform: scale(1.3);\n  }\n`;\n\nconst LogInButton = () => {\n  const nav = useNavigate();\n\n  return (\n    <LogInButtonContainer>\n      <h2>For order you should be loged in</h2>\n      <CustomButton onClick={() => nav('/login')}>Log In</CustomButton>\n    </LogInButtonContainer>\n  );\n};\n\nexport default LogInButton;\n","import styled from 'styled-components';\r\n\r\nexport const CheckoutContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nexport const CheckoutHeader = styled.div`\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlock = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n  &:last-child {\r\n    width: 8%;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 15px;\r\n    width: auto;\r\n    &:last-child {\r\n      width: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Total = styled.span`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from '../../store/cart/cart.selector';\r\nimport { IOrder } from '../../types/order.interfac';\r\n\r\nimport CheckoutItem from '../../components/features/checkout-item/checkout-item.component';\r\nimport PaymentForm from '../../components/elements/payment-form/payment-form.component';\r\nimport LogInButton from '../../components/elements/log-in-button/log-in-button.component';\r\n\r\nimport {\r\n  CheckoutContainer,\r\n  CheckoutHeader,\r\n  HeaderBlock,\r\n  Total,\r\n} from './checkout-page.style';\r\n\r\nconst CheckoutPage = () => {\r\n  const cartItems = useSelector(selectCartItems);\r\n  const cartTotal = useSelector(selectCartTotal);\r\n\r\n  const productsToOrder: IOrder[] = cartItems.map((item) => ({\r\n    productid: item.id,\r\n    quantity: item.quantity,\r\n  }));\r\n\r\n  return (\r\n    <CheckoutContainer>\r\n      <CheckoutHeader>\r\n        <HeaderBlock>\r\n          <span>Product</span>\r\n        </HeaderBlock>\r\n        <HeaderBlock>\r\n          <span>Title</span>\r\n        </HeaderBlock>\r\n        <HeaderBlock>\r\n          <span>Quantity</span>\r\n        </HeaderBlock>\r\n        <HeaderBlock>\r\n          <span>Price</span>\r\n        </HeaderBlock>\r\n        <HeaderBlock>\r\n          <span>Remove</span>\r\n        </HeaderBlock>\r\n      </CheckoutHeader>\r\n      {cartItems.map((item) => (\r\n        <CheckoutItem key={item.id} item={item} />\r\n      ))}\r\n      <Total>Total: ${cartTotal}</Total>\r\n      {localStorage.getItem('token') ? (\r\n        <PaymentForm productsToOrder={productsToOrder} />\r\n      ) : (\r\n        <LogInButton />\r\n      )}\r\n    </CheckoutContainer>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n"],"names":["CheckoutItemContainer","styled","div","_templateObject","_taggedTemplateLiteral","ImageContainer","_templateObject2","Info","span","_templateObject3","PriceContainer","_templateObject4","OldPrice","_templateObject5","NewPrice","_templateObject6","Quantity","_templateObject7","Arrow","_templateObject8","Value","_templateObject9","RemoveBtn","_templateObject10","memo","_ref","item","images","title","quantity","price","discountpercentage","stock","dispatch","useDispatch","_jsxs","children","_jsx","Link","to","concat","id","src","alt","onClick","reduceProduct","reduceItemInCart","addProduct","addItemToCart","_Fragment","fixRounding","Number","discoundPrice","removeProduct","removeItemFromCart","PaymentFormContainer","FormContainer","form","PaymentButton","CustomButton","productsToOrder","token","useSelector","selectTokenAndId","isProccesingPayment","setIsProccesingPayment","selectCartTotal","useState","onSubmit","async","e","preventDefault","addOrder","order","setInterval","isLoading","buttonType","BUTTON_TYPE_CLASSES","inverted","LogInButtonContainer","LogInButton","nav","useNavigate","CheckoutContainer","CheckoutHeader","HeaderBlock","Total","CheckoutPage","cartItems","selectCartItems","cartTotal","map","productid","CheckoutItem","localStorage","getItem","PaymentForm"],"sourceRoot":""}